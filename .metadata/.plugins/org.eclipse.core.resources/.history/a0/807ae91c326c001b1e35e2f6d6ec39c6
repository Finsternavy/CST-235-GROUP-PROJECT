package controllers;

import javax.faces.bean.ApplicationScoped;
import javax.faces.bean.ManagedBean;
import javax.faces.context.FacesContext;

import beans.Project;
import beans.Task;


@SuppressWarnings("deprecation")
@ManagedBean
@ApplicationScoped
public class ProjectController {
	
	
	public Project myProject = new Project();
	

	public String createTask() {
		
		
		FacesContext context = FacesContext.getCurrentInstance();
		Task task = context.getApplication().evaluateExpressionGet(context, "#{task}", Task.class);
		Project project = context.getApplication().evaluateExpressionGet(context, "#{project}", Project.class);
		myProject.setChoice("All Tasks");
		//User user = context.getApplication().evaluateExpressionGet(context, "#{user}", User.class);
		
		//myProject.setChoice(project.getChoice());
		myProject.addTask(task);
		myProject.hashMapToList();
		
		System.out.println(myProject.toString());
		
		//FacesContext.getCurrentInstance().getExternalContext().getRequestMap().put("task", task);
				
		//FacesContext.getCurrentInstance().getExternalContext().getRequestMap().put("user", user);
		return "response.xhtml";
		
	}
	
	public String deleteTask() {
		
		FacesContext context = FacesContext.getCurrentInstance();
		Task task = context.getApplication().evaluateExpressionGet(context, "#{task}", Task.class);
		
		myProject.removeTask(task.getToBeDeleted());
		myProject.hashMapToList();
		
		task = null;
		
		return "response.xhtml";
	}
	
	public String updateTable() {
		
		FacesContext context = FacesContext.getCurrentInstance();
		Project project = context.getApplication().evaluateExpressionGet(context, "#{project}", Project.class);
		
		System.out.println("Choice is currently set to: " + project.getChoice());
		
		return "response.xhtml";
	}
	
}
